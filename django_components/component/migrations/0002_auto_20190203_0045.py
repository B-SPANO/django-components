# Generated by Django 2.1.5 on 2019-02-02 23:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('component', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block', models.CharField(db_index=True, help_text='Name of the spot the component should be inserted into.', max_length=127, verbose_name='block name')),
                ('order', models.CharField(db_index=True, help_text='If many components are set to get into the same spot, the first one to get there is the lower.', max_length=127, verbose_name='block order')),
            ],
            options={
                'verbose_name': 'layout',
                'verbose_name_plural': 'layouts',
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Used in html head and H1 (you can use templating language)', max_length=127, verbose_name='screen title')),
                ('icon', models.CharField(help_text='Used in html head and H1 (you may use templating language here)', max_length=16, verbose_name='icon name, used as visual identification everywhere it should')),
                ('visible_in_sitemap', models.BooleanField(verbose_name='Should this screen appear in sitemap ?')),
                ('visible_in_breadcrumb', models.BooleanField(verbose_name='Should this screen appear in children breadcrumb ?')),
                ('use_comprehensive_in_breadcrumb', models.BooleanField(verbose_name='Should children breadcrumb use the comprehensive version of this screen instead ?')),
                ('visible_in_menu', models.BooleanField(verbose_name='Should this screen must appear in menu ?')),
            ],
            options={
                'verbose_name': 'screen',
                'verbose_name_plural': 'screens',
            },
        ),
        migrations.AlterField(
            model_name='component',
            name='name',
            field=models.CharField(db_index=True, max_length=16, unique=True, verbose_name='name'),
        ),
        migrations.AddField(
            model_name='screen',
            name='component_set',
            field=models.ManyToManyField(through='component.Layout', to='component.Component'),
        ),
        migrations.AddField(
            model_name='screen',
            name='comprehensive',
            field=models.ForeignKey(blank=True, help_text='Set the comprehensive screen of which this current screen is a specific version of', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specific_set', to='component.Screen', verbose_name='parent'),
        ),
        migrations.AddField(
            model_name='screen',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Parent view', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_set', to='component.Screen', verbose_name='parent'),
        ),
        migrations.AddField(
            model_name='layout',
            name='component',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layout_set', to='component.Component', verbose_name='component'),
        ),
        migrations.AddField(
            model_name='layout',
            name='screen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layout_set', to='component.Screen', verbose_name='screen'),
        ),
        migrations.AlterIndexTogether(
            name='screen',
            index_together={('parent', 'title'), ('parent', 'comprehensive', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='layout',
            unique_together={('screen', 'component', 'block')},
        ),
        migrations.AlterIndexTogether(
            name='layout',
            index_together={('screen', 'component', 'block', 'order'), ('screen', 'component', 'block'), ('screen', 'component')},
        ),
    ]
